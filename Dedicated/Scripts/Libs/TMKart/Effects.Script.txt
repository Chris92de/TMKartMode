// #RequireContext CSmMode
#Include "MathLib" as MathLib
#Include "TextLib" as TextLib

#Include "Libs/Nadeo/ModeLibs/Legacy/Layers2.Script.txt" as Layers
#Include "Libs/TMKart/UI/EffectInkSplats.Script.txt" as InkSplats

/////////////
// Structs //
/////////////

#Struct K_BoxEffect {
    Text        Name;
    Text        Marker;
    Text        TargetMode;
    Integer     Duration;
    Text        Function;
    Text        ImageURL;
}

#Struct K_BoxEffectOnPlayer {
    K_BoxEffect     Effect;
    Integer         StartAt;
    Integer         EndAt;
    CSmPlayer       Player;
}

///////////
// Plugs //
///////////

declare K_BoxEffect[] EffectsList;
declare K_BoxEffectOnPlayer[Text] EffectsOnPlayerList;

///////////////
// Functions //
///////////////

K_BoxEffect GetByIndex(Integer Index) {
    return EffectsList[Index];
}

Void InitEffects() {
    // None effect
    declare K_BoxEffect NoneEffect;
    NoneEffect.Name       = "None";
    NoneEffect.Marker     = "e_none";
    NoneEffect.TargetMode = "none";
    NoneEffect.Duration   = 0;
    NoneEffect.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968911908595961876/nothing.png";
    EffectsList.add(NoneEffect);

    // Thunder // NoEngine
    declare K_BoxEffect Thunder;
    Thunder.Name       = "Thunder";
    Thunder.Marker     = "e_thunder";
    Thunder.Function   = "SetPlayer_Delayed_NoEngine";
    Thunder.TargetMode = "nearest";
    Thunder.Duration   = 5000;
    Thunder.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968907448045948938/thunder.png";
    EffectsList.add(Thunder);

    // CruiseControlAll
    declare K_BoxEffect ForceCruiseControlAll;
    ForceCruiseControlAll.Name       = "Force Cruise Control";
    ForceCruiseControlAll.Marker     = "e_cruise_all";
    ForceCruiseControlAll.TargetMode = "nearest";
    ForceCruiseControlAll.Duration   = 3500;
    ForceCruiseControlAll.ImageURL = "https://cdn.discordapp.com/attachments/934577399033647104/968908512602255370/cruisecontrol.png";
    EffectsList.add(ForceCruiseControlAll);

    // Turbo
    declare K_BoxEffect Turbo;
    Turbo.Name       = "Turbo";
    Turbo.Marker     = "e_turbo_self";
    Turbo.TargetMode = "self";
    Turbo.Duration   = 2500;
    Turbo.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968909707366506496/boost1.png";
    EffectsList.add(Turbo);

    // Turbo2
    declare K_BoxEffect SuperTurbo;
    SuperTurbo.Name       = "Super Turbo";
    SuperTurbo.Marker     = "e_turbo2_self";
    SuperTurbo.TargetMode = "self";
    SuperTurbo.Duration   = 2500;
    SuperTurbo.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968909881287516210/boost2.png";
    EffectsList.add(SuperTurbo);

    // Fragile
    declare K_BoxEffect Fragile;
    Fragile.Name       = "Fragile";
    Fragile.Marker     = "e_fragile";
    Fragile.TargetMode = "nearest";
    Fragile.Duration   = 10000;
    Fragile.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968910304090148905/fragile.png";
    EffectsList.add(Fragile);

    // NoBrake
    declare K_BoxEffect NoBrake;
    NoBrake.Name       = "No Brake";
    NoBrake.Marker     = "e_nobrake";
    NoBrake.TargetMode = "nearest";
    NoBrake.Duration   = 5000;
    NoBrake.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968910570763984947/nobrake.png";
    EffectsList.add(NoBrake);

    // LowGravity
    declare K_BoxEffect LowGravity;
    LowGravity.Name         = "Low Gravity";
    LowGravity.Marker       = "e_low_gravity";
    LowGravity.TargetMode   = "nearest";
    LowGravity.Duration   = 5000;
    LowGravity.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968911201918668810/lowgravity.png";
    EffectsList.add(LowGravity);

    // SlowMo
    declare K_BoxEffect SlowMo;
    SlowMo.Name         = "Slow Motion";
    SlowMo.Marker       = "e_slowmo";
    SlowMo.TargetMode   = "nearest";
    SlowMo.Duration   = 2500;
    SlowMo.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968911442105479228/slowmo.png";
    EffectsList.add(SlowMo);

    // Yeet
    declare K_BoxEffect Yeet;
    Yeet.Name     = "YEEET";
    Yeet.Marker   = "e_turbo2_self";
    Yeet.TargetMode   = "nearest";
    Yeet.Duration   = 3000;
    Yeet.ImageURL   = "https://cdn.discordapp.com/attachments/934577399033647104/968911657126473728/yeet.png";
    EffectsList.add(Yeet);

    // Ink Splats
    declare K_BoxEffect InkSplats;
    InkSplats.Name           = "Ink Splats";
    InkSplats.Marker         = "e_ink_splats";
    InkSplats.TargetMode     = "nearest";
    InkSplats.ImageURL       = "https://cdn.discordapp.com/attachments/934577399033647104/968988325677522954/ink_icon.png";
    InkSplats.Duration       = 5000;
    EffectsList.add(InkSplats);

    Layers::Create("InkSplats", InkSplats::GetManialink());
    Layers::SetType("InkSplats", CUILayer::EUILayerType::Normal);
    Layers::Attach("InkSplats");
}

K_BoxEffect GetRandomEffect() {
    return EffectsList[MathLib::Rand(1, EffectsList.count - 1)];
}

Void ActivateOnPlayer(CSmPlayer Player, K_BoxEffect Effect) {
    // check if player effect are full, if so don't try to apply more...
    if (SetPlayer_DelayedIsFull(Player)) return;

    switch(Effect.Marker) {
        case "e_thunder": {
            SetPlayer_Delayed_NoEngine(Player, True);
        }
        case "e_cruise_all": {
            SetPlayer_Delayed_Cruise(Player, True, Player.Speed);
        }
        case "e_turbo_self": {
            SetPlayer_Delayed_BoostUp(Player, True);
        }
        case "e_turbo2_self": {
            SetPlayer_Delayed_Boost2Up(Player, True);
        }
        case "e_fragile": {
            SetPlayer_Delayed_Fragile(Player, True);
        }
        case "e_nobrake": {
            SetPlayer_Delayed_NoBrakes(Player, True);
        }
        case "e_low_gravity": {
            SetPlayer_Delayed_GravityCoef(Player, 0.3);
        }
        case "e_slowmo": {
            SetPlayer_Delayed_SlowMotion(Player, True);
        }
        case "e_ink_splats":
        {
            InkSplats::SetStatus(Player, True);
        }
    }

    declare K_BoxEffectOnPlayer EffectOnPlayer;
    EffectOnPlayer.Effect = Effect;
    EffectOnPlayer.StartAt = Now;
    EffectOnPlayer.EndAt = EffectOnPlayer.StartAt + Effect.Duration;
    EffectOnPlayer.Player = Player;
    EffectsOnPlayerList[TextLib::ToText(EffectOnPlayer.StartAt)] = EffectOnPlayer;

}

Void UnActivateOnPlayer(K_BoxEffectOnPlayer _effectOnPlayer) {
    if(_effectOnPlayer.Player != Null) {
        switch(_effectOnPlayer.Effect.Marker) {
            case "e_thunder": {
                SetPlayer_Delayed_NoEngine(_effectOnPlayer.Player, False);
            }
            case "e_cruise_all": {
                SetPlayer_Delayed_Cruise(_effectOnPlayer.Player, False, _effectOnPlayer.Player.Speed);
            }
            case "e_turbo_self": {
                SetPlayer_Delayed_BoostUp(_effectOnPlayer.Player, False);
            }
            case "e_turbo2_self": {
                SetPlayer_Delayed_Boost2Up(_effectOnPlayer.Player, False);
            }
            case "e_fragile": {
                SetPlayer_Delayed_Fragile(_effectOnPlayer.Player, False);
            }
            case "e_nobrake": {
                SetPlayer_Delayed_NoBrakes(_effectOnPlayer.Player, False);
            }
            case "e_low_gravity": {
                SetPlayer_Delayed_GravityCoef(_effectOnPlayer.Player, 1.0);
            }
            case "e_slowmo": {
                SetPlayer_Delayed_SlowMotion(_effectOnPlayer.Player, False);
            }
            case "e_ink_splats":
            {
                InkSplats::SetStatus(_effectOnPlayer.Player, False);
            }
        }
        UIManager.GetUI(_effectOnPlayer.Player).QueueMessage(2000, 2, CUIConfig::EMessageDisplay::Big, TextLib::Compose("Effect $<%1$> cleared", _effectOnPlayer.Effect.Name));
    }
    EffectsOnPlayerList.removekey(TextLib::ToText(_effectOnPlayer.StartAt));
}

Void ClearEffectOnPlayer(CSmPlayer Player) {
    foreach(EffectOnPlayer in EffectsOnPlayerList) {
        if(EffectOnPlayer.Player.User.Login == Player.User.Login) {
            UnActivateOnPlayer(EffectOnPlayer);
        }
    }
    SetPlayer_Delayed_Reset(Player);
}

Void ProcessEffectEventsLoop() {
    foreach(EffectOnPlayer in EffectsOnPlayerList) {
        if(Now < EffectOnPlayer.EndAt) continue;
        UnActivateOnPlayer(EffectOnPlayer);
    }
}

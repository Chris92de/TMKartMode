//#RequireContext CSmMode

Void Splat(CSmPlayer _Player, Integer _Duration) {
    declare netwrite Integer Net_TMKart_InksplatDuration for _Player = 3000;
    declare netwrite Integer Net_TMKart_InksplatUpdate for _Player = -1;
	declare netwrite Boolean Net_TMKart_InkReset for _Player = False;
	Net_TMKart_InkReset = False;
    Net_TMKart_InksplatDuration = _Duration;
    Net_TMKart_InksplatUpdate = Now;
}

Void Reset(CSmPlayer _Player) {
    declare netwrite Integer Net_TMKart_InksplatUpdate for _Player = -1;
    declare netwrite Boolean Net_TMKart_InkReset for _Player = False;
	Net_TMKart_InkReset = True;
	Net_TMKart_InksplatUpdate = Now;
}

Text GetManialink() {
    return """
    <?xml version="1.0" encoding="utf-8" standalone="yes" ?>
    <manialink version="3">
    <frame id="Splatter">
    <!-- stack 1 -->
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <!-- stack 2 -->
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <!-- stack 3 -->
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <!-- stack 4 -->
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    <quad size="60 60" opacity="0" colorize="000" image="https://raw.githubusercontent.com/reaby/TMKartMode/master/Assets/ink_splats.png" halign="center" valign="center"/>
    </frame>

    <script><!--
    #Include "MathLib" as Math
    declare CAudioSource SplatSfx;
    declare Integer[] StackCounter;

    Void EnableSplat(Integer Duration) {
        declare CMlFrame Frame = Page.GetFirstChild("Splatter") as CMlFrame;
        declare Vec2[] pos;
        declare Integer x = 0;

        if (StackCounter.count >= 4) return; // no more than 4 stacks...
        StackCounter.add(Now+Duration);
        for(i, (StackCounter.count-1)*6, StackCounter.count*6-1) {
            declare CMlQuad Quad = Frame.Controls[i] as CMlQuad;
            declare newPos = <Math::Rand(-8, 8)*20., Math::Rand(-5, 5)*18.>;
            while (True) {
                if (pos.exists(newPos)) {
                    newPos = <Math::Rand(-8, 8)*20., Math::Rand(-5, 5)*18.>;
                } else {
                    pos.add(newPos);
                    break;
                }
            }
            Quad.RelativePosition_V3 = newPos;
            Quad.RelativeRotation = Math::Rand(0., 5.)*15;
            Quad.RelativeScale = 2.5;
            AnimMgr.Add(Quad, "<elem opacity=\"1\" />", Now + x*250, 1000, CAnimManager::EAnimManagerEasing::CircIn);
            AnimMgr.Add(Quad, "<elem opacity=\"0\" />", Now + Duration + (6 - x)*250 , 1000, CAnimManager::EAnimManagerEasing::CircIn);
            x+=1;
        }
        SplatSfx.Play();
    }

	Void ResetSplats() {
		declare CMlFrame Frame = Page.GetFirstChild("Splatter") as CMlFrame;
		for(i, 0, 23) {
			declare CMlQuad Quad = Frame.Controls[i] as CMlQuad;
			AnimMgr.Flush(Quad);
			Quad.Opacity = 0.0;
		}
	}

    main() {
        wait(GUIPlayer != Null);
        declare netread Integer Net_TMKart_InksplatDuration for GUIPlayer;
        declare netread Integer Net_TMKart_InksplatUpdate for GUIPlayer = -1;
		declare netread Boolean Net_TMKart_InkReset for GUIPlayer = False;
        declare Integer LastUpdate = 0;
        SplatSfx = Audio.CreateSound("https://cdn.discordapp.com/attachments/934577399033647104/968984484735221780/ink_splash_sfx.ogg", 0., False, False, False);
        while(True) {
            yield;

            if (Net_TMKart_InksplatUpdate > LastUpdate) {
                LastUpdate = Net_TMKart_InksplatUpdate;
                if (Net_TMKart_InkReset) {
					ResetSplats();
				} else {
					EnableSplat(Net_TMKart_InksplatDuration);
				}
            }

            foreach(index => EndTime in StackCounter) {
                if (Now >= EndTime) {
                    StackCounter.removekey(index);
                }
            }
        }
    }


    --></script>
    </manialink>
    """;
}

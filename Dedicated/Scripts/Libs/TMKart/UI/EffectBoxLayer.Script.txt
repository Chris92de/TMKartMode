//#RequireContext CMlScriptIngame
#Const C_ActivateEffectEvent_Type	"activated"

Text GetManialink() {
    return """<?xml version="1.0" encoding="utf-8" standalone="yes"?>
    <manialink version="3">
		<frame id="Window" hidden="0">
            <quad id="TitleBackground" pos="0 80" z-index="2" valign="top" halign="center" size="70 8" style="Bgs1" substyle="BgWindow2" opacity="0.9" />
            <label id="Title" pos="0 78.5" z-index="3" textcolor="FFF" valign="top" halign="center" style="TextValueSmallSm" text="text"/>
		</frame>
		<script><!--
			#Include "TextLib" as TextLib
			#Include "MathLib" as MathLib

            Void SendPlayerActivatedEffect() {
                SendCustomEvent("{{{C_ActivateEffectEvent_Type}}}", []);
            }

			main()
			{
				declare CMlFrame Window = (Page.GetFirstChild("Window") as CMlFrame);
                Window.Visible = True;
                declare CMlLabel Title = (Page.GetFirstChild("Title") as CMlLabel);
                Title.SetText("No Item");
                declare CMlMediaPlayer  VideoTransition <=> (Page.GetFirstChild("VideoTransitionBrowseTracks") as CMlMediaPlayer);

                while(True)
                {
                    if(InputPlayer != Null) {
                        declare netread Text Net_PlayerAvilEffectName for InputPlayer;
                        Title.SetText(Net_PlayerAvilEffectName);
                        foreach (Event in PendingEvents) {
                            if (Event.Type == CMlScriptEvent::Type::KeyPress) {
                                switch(Event.KeyCode) {
                                    case 33: {	// E
                                        log("player clicked activation button");
                                        SendPlayerActivatedEffect();
                                    }
                                }
                            }
                        }
                        
                        if (Input.PendingEvents.count > 0) {
                        	if(Input.PendingEvents[0].Pad.Type != CInputPad::EPadType::Keyboard) {
                                foreach (Event in Input.PendingEvents) {
                                    if (Event.Type == CInputEvent::EType::PadButtonPress) {
                                        switch(Event.Button) {
                                            case CInputEvent::EButton::LeftStick: {
                                                log("player clicked activation button");
                                                SendPlayerActivatedEffect();
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    yield;
                }
			}
		--></script>
	</manialink>""";
}
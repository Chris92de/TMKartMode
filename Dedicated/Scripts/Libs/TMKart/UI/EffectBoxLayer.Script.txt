// #RequireContext CSmMlScriptIngame

#Struct K_BoxEffect {
    Text        Name;
    Text        Marker;
    Text        TargetMode;
    Integer     Duration;
    Text        Function;
    Text        ImageURL;
}

Text Private_GenEffects(K_BoxEffect[] EffectList) {
    declare OutXml = """<frame id="Effects">""";
    foreach (i => Effect in EffectList) {
        declare Text Hid = "hidden=\"1\"";
        if (i == 0) Hid = "hidden=\"0\"";
        OutXml ^= """
        <frame id="{{{ Effect.Name }}}" {{{ Hid }}}>
        <quad pos="0 1" size="19 19" opacity="1" image="{{{ Effect.ImageURL }}}" halign="center" valign="center"/>
        <label pos="0 -9.5" size="20 4" text="{{{ Effect.Name }}}" textfont="GameFontRegular" textsize="2" halign="center" valign="center" />
        </frame>
        """;
    }
    OutXml ^= """</frame>""";
    return OutXml;
}

Text GetManialink(K_BoxEffect[] EffectList) {
    declare Text EffectsXml = Private_GenEffects(EffectList);

    return """<?xml version="1.0" encoding="utf-8" standalone="yes"?>
    <manialink version="3">
    <frame pos="0 75">
    {{{ EffectsXml }}}
    <quad pos="0 0" z-index="0" size="25 25" style="Bgs1InRace" substyle="BgColorContour" opacity="0.7" halign="center" valign="center"/>
    </frame>
    <script><!--
    #Include "TextLib" as TextLib
    #Include "MathLib" as MathLib

    Void SendPlayerActivatedEffect() {
        log("player clicked activation button");
        SendCustomEvent("activate", []);
    }

    Void SetActiveEffect(Text EffectName) {
        declare CMlFrame Frame <=> (Page.GetFirstChild("Effects") as CMlFrame);
        foreach (Elem in Frame.Controls) {
            Elem.Hide();
            if (Elem.ControlId == EffectName) Elem.Show();
        }
    }



    main()
    {
        wait(GUIPlayer != Null);
        declare LastEffectName = "";
        declare netread Text Net_PlayerAvilEffectMarker for GUIPlayer;
        declare Integer Key = 33;
        while(True)
        {
            yield;

            if (LastEffectName != Net_PlayerAvilEffectMarker) {
                LastEffectName = Net_PlayerAvilEffectMarker;
                SetActiveEffect(Net_PlayerAvilEffectMarker);
            }

            foreach (Event in PendingEvents) {
                if (Event.Type == CMlScriptEvent::Type::KeyPress &&
                    Event.KeyCode == Key) {
                        SendPlayerActivatedEffect();
                    }
                }
            }

            if (Input.PendingEvents.count > 0 && Input.PendingEvents[0].Pad.Type != CInputPad::EPadType::Keyboard) {
                foreach (Event in Input.PendingEvents) {
                    if (Event.Type == CInputEvent::EType::PadButtonPress &&
                        Event.Button == CInputEvent::EButton::LeftStick) {
                            SendPlayerActivatedEffect();
                        }
                    }
                }
            }
            --></script>
            </manialink>""";
        }